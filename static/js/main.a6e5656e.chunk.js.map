{"version":3,"sources":["Weather.js","App.js","reportWebVitals.js","index.js"],"names":["Weather","city","country","temperature","humidity","description","error","className","apiKey","Title","Form","onWeather","onSubmit","e","type","name","placeholder","App","state","undefined","getWeather","a","preventDefault","currentTarget","elements","value","fetch","apiCall","json","main","sys","weather","setState","temp","console","log","message","style","width","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6e5656e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Weather = ({\r\n  city,\r\n  country,\r\n  temperature,\r\n  humidity,\r\n  description,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"weather__info\">\r\n      {city && country && (\r\n        <p className=\"weather__key\">\r\n          Location:{\" \"}\r\n          <span className=\"weather__value\">\r\n            {\" \"}\r\n            {city}, {country}\r\n          </span>\r\n        </p>\r\n      )}\r\n\r\n      {temperature && (\r\n        <p className=\"weather__key\">\r\n          Temperature: <span className=\"weather__value\"> {temperature}</span>\r\n        </p>\r\n      )}\r\n\r\n      {humidity && (\r\n        <p className=\"weather__key\">\r\n          Humidity: <span className=\"weather__value\"> {humidity} </span>\r\n        </p>\r\n      )}\r\n\r\n      {description && (\r\n        <p className=\"weather__key\">\r\n          Condition: <span className=\"weather__value\"> {description}</span>\r\n        </p>\r\n      )}\r\n\r\n      {error && <p className=\"weather__error\">{error}</p>}\r\n    </div>\r\n  );\r\n};\r\nexport default Weather;","import React, { Component } from \"react\";\nimport Weather from \"./Weather\";\nimport \"./App.css\";\n\n\nconst apiKey = \"8ddceeacaf8b95fe943c88fc8389dee0\";\n\nconst Title = () => {\n  return (\n    <div>\n      <h1 className=\"title-container__title\">WEATHER FINDER</h1>\n      <h3 className=\"title-container__subtitle\">\n        Find out temperature, humidity and conditions!\n      </h3>\n    </div>\n  );\n};\n\nconst Form = ({ onWeather }) => {\n  return (\n    <form onSubmit={e => onWeather(e)}>\n      <input type=\"text\" name=\"city\" placeholder=\"City...\" />\n      <input type=\"text\" name=\"country\" placeholder=\"Country...\" />\n      <button className=\"form-button\">Get Weather</button>\n    </form>\n  );\n};\n\nclass App extends Component {\n  state = {\n    temperature: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n    error: undefined\n  };\n  getWeather = async e => {\n    e.preventDefault();\n    const city = e.currentTarget.elements.city.value;\n    const country = e.currentTarget.elements.country.value;\n    if (city && country) {\n      try {\n        const apiCall = await fetch(\n          `https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${apiKey}&units=metric`\n        );\n        const { main, sys, name, weather } = await apiCall.json();\n        this.setState({\n          temperature: main.temp,\n          city: name,\n          country: sys.country,\n          humidity: main.humidity,\n          description: weather[0].description,\n          error: \"\"\n        });\n      } catch (ex) {\n        console.log(ex.message);\n      }\n    } else {\n      this.setState({\n        temperature: undefined,\n        city: undefined,\n        country: undefined,\n        humidity: undefined,\n        description: undefined,\n        error: \"please enter a valid values.\"\n      });\n    }\n  };\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"main\">\n          <div className=\"container\" style={{ width: \"100%\" }}>\n            <div className=\"row\">\n              <div className=\"col-xs-5 title-container\">\n                <Title />\n              </div>\n              <div className=\"col-xs-7 form-container\">\n                <Form onWeather={this.getWeather} />\n                <Weather\n                  temperature={this.state.temperature}\n                  city={this.state.city}\n                  country={this.state.country}\n                  humidity={this.state.humidity}\n                  description={this.state.description}\n                  error={this.state.error}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}